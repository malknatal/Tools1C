
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УМеняЕстьДатаРожденияЧеловекаРавная(Парам01)","УМеняЕстьДатаРожденияЧеловекаРавная","Допустим У меня есть дата рождения человека равная 26.12.1983","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УМеняЕстьТекущаяДатаРавная(Парам01)","УМеняЕстьТекущаяДатаРавная","И у меня есть текущая дата равная 26.04.2017","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозрастЧеловекаБудетРавен(Парам01)","ВозрастЧеловекаБудетРавен","Тогда Возраст Человека будет равен 400","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"РезультатБудетРавен(Парам01)","РезультатБудетРавен","Тогда Результат будет равен 400","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим У меня есть дата рождения человека равная 26.12.1983
//@УМеняЕстьДатаРожденияЧеловекаРавная(Парам01)
Процедура УМеняЕстьДатаРожденияЧеловекаРавная(ДатаРождения) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Контекст.Вставить("ДатаРождения", ДатаРождения);
КонецПроцедуры

&НаКлиенте
//И у меня есть текущая дата равная 26.04.2017
//@УМеняЕстьТекущаяДатаРавная(Парам01)
Процедура УМеняЕстьТекущаяДатаРавная(ТекущаяДата) Экспорт	
	Контекст.Вставить("ТекущаяДата", ТекущаяДата);
КонецПроцедуры

&НаКлиенте
//Тогда Возраст Человека будет равен 400
//@ВозрастЧеловекаБудетРавен(Парам01)
Процедура ВозрастЧеловекаБудетРавен(ОжидаемыйРезультат) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Если Контекст.ДатаРождения = Дата(1,1,1) Тогда
		ВызватьИсключение "Не указана дата рождения";
	КонецЕсли;
	
	Если Контекст.ТекущаяДата = Дата(1,1,1) Тогда
		ВызватьИсключение "Не указана текущая дата";
	КонецЕсли;

	Результат = ОбщийМодуль1.РассчитатьВозрастЧеловекаВМЕсяцах(Контекст.ДатаРождения, Контекст.ТекущаяДата);
	Если Не Результат = ОжидаемыйРезультат Тогда
		ВызватьИсключение "Результат рассчитан неверно";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//Тогда Результат будет равен 400
//@РезультатБудетРавен(Парам01)
Процедура РезультатБудетРавен(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры
